"use strict";(self.webpackChunkreact_toastify_doc=self.webpackChunkreact_toastify_doc||[]).push([[4266],{6616:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>u,frontMatter:()=>r,metadata:()=>t,toc:()=>i});const t=JSON.parse('{"id":"define-callback","title":"Callbacks and closure reason","description":"You can define two callbacks. Their names are self-explanatory:","source":"@site/docs/callback.md","sourceDirName":".","slug":"/define-callback","permalink":"/react-toastify/define-callback","draft":false,"unlisted":false,"editUrl":"https://github.com/fkhadra/react-toastify-doc/edit/master/docs/callback.md","tags":[],"version":"current","frontMatter":{"id":"define-callback","title":"Callbacks and closure reason","sidebar_label":"Callbacks and closure reason \u2728"},"sidebar":"someSidebar","previous":{"title":"Handling promise","permalink":"/react-toastify/promise"},"next":{"title":"Icons","permalink":"/react-toastify/icons"}}');var s=o(5105),a=o(9621);const r={id:"define-callback",title:"Callbacks and closure reason",sidebar_label:"Callbacks and closure reason \u2728"},l=void 0,c={},i=[];function d(e){const n={code:"code",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"You can define two callbacks. Their names are self-explanatory:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"onOpen"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"onClose"})}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"import { toast } from 'react-toastify';\n\nfunction Example(){\n\n  const notify = () => {\n    toast(\"Hello there\", {\n      onOpen: () => window.alert('Called when I open'),\n      onClose: (reason?: boolean | string) => window.alert('Called when I close')\n    });\n  }\n\n  return <button onClick={notify}>Notify</button>;\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Additionally ",(0,s.jsx)(n.code,{children:"onClose"})," receives a closure reason as the first argument. When the user closes the notification, the ",(0,s.jsx)(n.code,{children:"reason"})," argument is equal to ",(0,s.jsx)(n.code,{children:"true"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["In the example below, I've named my argument\n",(0,s.jsx)(n.code,{children:"removedByUser"})," to make the intent clear."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:'toast("hello", {\n  onClose(removedByUser){\n    if(removedByUser) {\n      // do something\n      return\n    }\n\n    // auto close do something else\n  }\n})\n'})}),"\n",(0,s.jsxs)(n.p,{children:["If you are using a custom component for your notification, you might want more control over the reason, especially if it contains\nmultiple call to actions. ",(0,s.jsx)(n.code,{children:"closeToast"})," let you specify a closure reason of your choice."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:'import { ToastContentProps } from "react-toastify";\n\nfunction CustomNotification({ closeToast }: ToastContentProps) {\n  return ( \n    <div>\n      You received a new message\n      <button onClick={() => closeToast("reply")}>Reply</button>\n      <button onClick={() => closeToast("ignore")}>Ignore</button>\n    </div>\n  )\n}\n\ntoast(CustomNotification, {\n  onClose(reason){\n    switch (reason) {\n      case "reply":\n        // navigate to reply page for example or open a dialog\n      case "ignore":\n        // tell the other user that she/he was ghosted xD\n      default:\n        // \ud83e\udd37\u200d\u2642\ufe0f\n    }\n  }\n})\n'})})]})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},9621:(e,n,o)=>{o.d(n,{R:()=>r,x:()=>l});var t=o(8101);const s={},a=t.createContext(s);function r(e){const n=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);