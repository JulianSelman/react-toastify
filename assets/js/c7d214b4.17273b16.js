"use strict";(self.webpackChunkreact_toastify_doc=self.webpackChunkreact_toastify_doc||[]).push([[3302],{9565:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>c,contentTitle:()=>r,default:()=>p,frontMatter:()=>s,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"prevent-duplicate","title":"Prevent duplicate","description":"There are two ways to prevent duplicates toast. Use the one that fits your use case \ud83d\udc4c.","source":"@site/docs/prevent-duplicate.md","sourceDirName":".","slug":"/prevent-duplicate","permalink":"/react-toastify/prevent-duplicate","draft":false,"unlisted":false,"editUrl":"https://github.com/fkhadra/react-toastify-doc/edit/master/docs/prevent-duplicate.md","tags":[],"version":"current","frontMatter":{"id":"prevent-duplicate","title":"Prevent duplicate","sidebar_label":"Prevent duplicate"},"sidebar":"someSidebar","previous":{"title":"Pause toast timer when the window loses focus","permalink":"/react-toastify/pause-on-focus-loss"},"next":{"title":"Delay notification appearance","permalink":"/react-toastify/delay-toast-appearance"}}');var i=n(5105),o=n(9621);const s={id:"prevent-duplicate",title:"Prevent duplicate",sidebar_label:"Prevent duplicate"},r=void 0,c={},d=[{value:"Simply provide a toast id",id:"simply-provide-a-toast-id",level:2},{value:"Check if a toast is already displayed",id:"check-if-a-toast-is-already-displayed",level:2}];function l(t){const e={code:"code",h2:"h2",p:"p",pre:"pre",...(0,o.R)(),...t.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.p,{children:"There are two ways to prevent duplicates toast. Use the one that fits your use case \ud83d\udc4c."}),"\n",(0,i.jsx)(e.h2,{id:"simply-provide-a-toast-id",children:"Simply provide a toast id"}),"\n",(0,i.jsx)(e.p,{children:"Providing a custom toast id is certainly the most straightforward way to prevent duplicate."}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",children:"import React from 'react';\nimport { toast } from 'react-toastify';\n\nconst customId = \"custom-id-yes\";\n\nfunction Example(){\n  const notify = () => {\n    toast(\"I cannot be duplicated!\", {\n      toastId: customId\n    });\n  }\n\n  return (\n    <div>\n      <button onClick={notify}>Notify</button>\n    </div>\n  )\n}\n"})}),"\n",(0,i.jsx)(e.h2,{id:"check-if-a-toast-is-already-displayed",children:"Check if a toast is already displayed"}),"\n",(0,i.jsxs)(e.p,{children:["Maybe there is some situations where you cannot provide a custom toast id, in that case, you can check if a toast is already displayed by calling ",(0,i.jsx)(e.code,{children:"toast.isActive(id)"}),"."]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-jsx",children:"import React from 'react';\nimport { toast } from 'react-toastify';\n\nfunction Example(){\n  const toastId = React.useRef(null);\n  \n  const notify = () => {\n    if(! toast.isActive(toastId.current)) {\n      toastId.current = toast(\"I cannot be duplicated!\");\n    }\n  }\n\n  return (\n    <div>\n      <button onClick={notify}>Notify</button>\n    </div>\n  )\n}\n"})})]})}function p(t={}){const{wrapper:e}={...(0,o.R)(),...t.components};return e?(0,i.jsx)(e,{...t,children:(0,i.jsx)(l,{...t})}):l(t)}},9621:(t,e,n)=>{n.d(e,{R:()=>s,x:()=>r});var a=n(8101);const i={},o=a.createContext(i);function s(t){const e=a.useContext(o);return a.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function r(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(i):t.components||i:s(t.components),a.createElement(o.Provider,{value:e},t.children)}}}]);