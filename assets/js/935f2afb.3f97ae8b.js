"use strict";(self.webpackChunkreact_toastify_doc=self.webpackChunkreact_toastify_doc||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"someSidebar":[{"type":"category","label":"Getting Started","items":[{"type":"link","label":"Introduction","href":"/react-toastify/introduction","docId":"introduction","unlisted":false},{"type":"link","label":"Installation","href":"/react-toastify/installation","docId":"installation","unlisted":false},{"type":"link","label":"\ud83d\ude80 Migrate to v10","href":"/react-toastify/migration-v10","docId":"migration-v10","unlisted":false},{"type":"link","label":"Migrate to v9","href":"/react-toastify/migration-v9","docId":"migration-v9","unlisted":false},{"type":"link","label":"Migrate to v8","href":"/react-toastify/migration-v8","docId":"migration-v8","unlisted":false},{"type":"link","label":"Release notes","href":"/react-toastify/release-notes","docId":"release-notes","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Usage","items":[{"type":"link","label":"Positioning toast","href":"/react-toastify/positioning-toast","docId":"positioning-toast","unlisted":false},{"type":"link","label":"Handling autoClose","href":"/react-toastify/autoClose","docId":"autoClose","unlisted":false},{"type":"link","label":"Render Anything","href":"/react-toastify/render-what-you-want","docId":"render-what-you-want","unlisted":false},{"type":"link","label":"Remove toast programmatically","href":"/react-toastify/remove-toast","docId":"remove-toast","unlisted":false},{"type":"link","label":"Handling promise","href":"/react-toastify/promise","docId":"promise","unlisted":false},{"type":"link","label":"Icons","href":"/react-toastify/icons","docId":"icons","unlisted":false},{"type":"link","label":"Pause toast timer when the window loses focus","href":"/react-toastify/pause-on-focus-loss","docId":"pause-on-focus-loss","unlisted":false},{"type":"link","label":"Use a custom id","href":"/react-toastify/use-a-custom-id","docId":"use-a-custom-id","unlisted":false},{"type":"link","label":"Prevent duplicate","href":"/react-toastify/prevent-duplicate","docId":"prevent-duplicate","unlisted":false},{"type":"link","label":"Delay notification appearance","href":"/react-toastify/delay-toast-appearance","docId":"delay-toast-appearance","unlisted":false},{"type":"link","label":"Limit the number of toast displayed","href":"/react-toastify/limit-the-number-of-toast-displayed","docId":"limit-the-number-of-toast-displayed","unlisted":false},{"type":"link","label":"Use a controlled progress bar","href":"/react-toastify/use-a-controlled-progress-bar","docId":"use-a-controlled-progress-bar","unlisted":false},{"type":"link","label":"Update a toast","href":"/react-toastify/update-toast","docId":"update-toast","unlisted":false},{"type":"link","label":"Define callback","href":"/react-toastify/define-callback","docId":"define-callback","unlisted":false},{"type":"link","label":"Listen for changes","href":"/react-toastify/listen-for-changes","docId":"listen-for-changes","unlisted":false},{"type":"link","label":"Use a custom close button or remove it","href":"/react-toastify/use-a-custom-close-button-or-remove-it","docId":"use-a-custom-close-button-or-remove-it","unlisted":false},{"type":"link","label":"Add an undo action to a toast (like Google Drive)","href":"/react-toastify/add-an-undo-action-to-a-toast","docId":"add-an-undo-action-to-a-toast","unlisted":false},{"type":"link","label":"Usage with redux","href":"/react-toastify/use-react-toastify-with-redux","docId":"use-react-toastify-with-redux","unlisted":false},{"type":"link","label":"Replace the default transition","href":"/react-toastify/replace-default-transition","docId":"replace-default-transition","unlisted":false},{"type":"link","label":"Define a custom enter and exit animation","href":"/react-toastify/custom-animation","docId":"custom-animation","unlisted":false},{"type":"link","label":"Drag to remove","href":"/react-toastify/drag-to-remove","docId":"drag-to-remove","unlisted":false},{"type":"link","label":"Enable right to left support","href":"/react-toastify/enable-right-to-left-support","docId":"enable-right-to-left-support","unlisted":false},{"type":"link","label":"Accessibility","href":"/react-toastify/accessibility","docId":"accessibility","unlisted":false},{"type":"link","label":"Stacked Notifications (v10)","href":"/react-toastify/stacked","docId":"stacked","unlisted":false},{"type":"link","label":"Multi containers","href":"/react-toastify/multi-containers","docId":"multi-containers","unlisted":false},{"type":"link","label":"How to style","href":"/react-toastify/how-to-style","docId":"how-to-style","unlisted":false},{"type":"link","label":"Dispatch toast outside of react component","href":"/react-toastify/dispatch-toast-outside-of-react-component","docId":"dispatch-toast-outside-of-react-component","unlisted":false},{"type":"link","label":"Play or pause the timer programmatically","href":"/react-toastify/timer","docId":"timer","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Addons","items":[{"type":"link","label":"useNotificationCenter","href":"/react-toastify/addons/use-notification-center","docId":"addons/use-notification-center","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"API Reference","items":[{"type":"link","label":"ToastContainer","href":"/react-toastify/api/toast-container","docId":"api/toast-container","unlisted":false},{"type":"link","label":"toast","href":"/react-toastify/api/toast","docId":"api/toast","unlisted":false},{"type":"link","label":"cssTransition","href":"/react-toastify/api/css-transition","docId":"api/css-transition","unlisted":false},{"type":"link","label":"collapseToast","href":"/react-toastify/api/collapse-toast","docId":"api/collapse-toast","unlisted":false}],"collapsed":true,"collapsible":true}]},"docs":{"accessibility":{"id":"accessibility","title":"Accessibility","description":"By default, all toasts are diplayed with the ARIA role alert. This can be changed globally or per toast.","sidebar":"someSidebar"},"add-an-undo-action-to-a-toast":{"id":"add-an-undo-action-to-a-toast","title":"Add an undo action to a toast (like Google Drive)","description":"<iframe","sidebar":"someSidebar"},"addons/use-notification-center":{"id":"addons/use-notification-center","title":"useNotificationCenter","description":"useNotificationCenter is a headless hook to build your notification center on top of react-toastify. In short, every time you call toast or any other variants like toast.update, toast.promise, toast.info, etc, the notification will be added to the toast center.","sidebar":"someSidebar"},"api/collapse-toast":{"id":"api/collapse-toast","title":"collapseToast","description":"| Parameter | Type                      | Required | Default | Description                                                              |","sidebar":"someSidebar"},"api/css-transition":{"id":"api/css-transition","title":"cssTransition","description":"| Parameter        | Type                      | Required | Default | Description                                                                                                |","sidebar":"someSidebar"},"api/toast":{"id":"api/toast","title":"toast","description":"Props","sidebar":"someSidebar"},"api/toast-container":{"id":"api/toast-container","title":"ToastContainer","description":"Props","sidebar":"someSidebar"},"autoClose":{"id":"autoClose","title":"Handling autoClose","description":"The autoClose prop accept a duration in milliseconds or false.","sidebar":"someSidebar"},"custom-animation":{"id":"custom-animation","title":"Define a custom enter and exit animation","description":"When it comes to animation the possibility are endless and it doesn\'t need to be complicated! Starting v7, css animations just works out of the box!","sidebar":"someSidebar"},"define-callback":{"id":"define-callback","title":"Define callback","description":"You can define two callbacks. Their names are self-explanatory:","sidebar":"someSidebar"},"delay-toast-appearance":{"id":"delay-toast-appearance","title":"Delay notification appearance","description":"You can delay the notification appearance as shown below. Under the hood, the library simply uses setTimeout for you.","sidebar":"someSidebar"},"dispatch-toast-outside-of-react-component":{"id":"dispatch-toast-outside-of-react-component","title":"Dispatch toast outside of react component","description":"The toast emitter is just a regular Javascript object, nothing less nothing more. You can dispatch notification from almost anywhere.","sidebar":"someSidebar"},"drag-to-remove":{"id":"drag-to-remove","title":"Drag to remove","description":"You can drag the toast to remove it. By default, the notifications are only draggable on touch devices.","sidebar":"someSidebar"},"enable-right-to-left-support":{"id":"enable-right-to-left-support","title":"Enable right to left support","description":"React-toastify has built-in support for RTL layout. When rendering your ToastContainer all you need to do is to set the rtl prop to true.","sidebar":"someSidebar"},"how-to-style":{"id":"how-to-style","title":"How to style","description":"Override css variables","sidebar":"someSidebar"},"icons":{"id":"icons","title":"Icons","description":"Built-in icons","sidebar":"someSidebar"},"installation":{"id":"installation","title":"Installation","description":"Requirements","sidebar":"someSidebar"},"introduction":{"id":"introduction","title":"React-toastify","description":"Financial Contributors on Open Collective","sidebar":"someSidebar"},"limit-the-number-of-toast-displayed":{"id":"limit-the-number-of-toast-displayed","title":"Limit the number of toast displayed","description":"Notifications are useful to get the attention of the user. But displaying too many of them can also be counterproductive.","sidebar":"someSidebar"},"listen-for-changes":{"id":"listen-for-changes","title":"Listen for changes","description":"If you want to know when a toast is added, updated or removed, toast expose a onChange method. When called a function to unsubscribe is returned. The callback will receive a ToastItem. The item provides a bunch of useful properties status, content, id, data, etc...","sidebar":"someSidebar"},"migration-v10":{"id":"migration-v10","title":"Migrate to v10","description":"What is new in v10","sidebar":"someSidebar"},"migration-v8":{"id":"migration-v8","title":"Migrate to v8","description":"React-toastify has been around for 5 years(will turn five the 8 November \ud83c\udf82). Since the beginning, one of the goals was to provide a library that is highly customizable and also able to work out of the box. Every major release introduces breaking changes but this is for the best \ud83d\udc4c.","sidebar":"someSidebar"},"migration-v9":{"id":"migration-v9","title":"Migrate to v9","description":"What is new in v9","sidebar":"someSidebar"},"multi-containers":{"id":"multi-containers","title":"Multi containers","description":"Multi containers support","sidebar":"someSidebar"},"pause-on-focus-loss":{"id":"pause-on-focus-loss","title":"Pause toast timer when the window loses focus","description":"The default behavior is to pause the toast timer whenever the window loses focus. You can opt-out by setting the pauseOnFocusLoss props to false.","sidebar":"someSidebar"},"positioning-toast":{"id":"positioning-toast","title":"Positioning toast","description":"By default, all the toasts will be positioned on the top right of your browser. If a position is set on a toast, the one defined on ToastContainer will be replaced.","sidebar":"someSidebar"},"prevent-duplicate":{"id":"prevent-duplicate","title":"Prevent duplicate","description":"There are two ways to prevent duplicates toast. Use the one that fits your use case \ud83d\udc4c.","sidebar":"someSidebar"},"promise":{"id":"promise","title":"Handling promises","description":"toast.promise","sidebar":"someSidebar"},"release-notes":{"id":"release-notes","title":"Release notes","description":"You can find the release note for the latest release here.","sidebar":"someSidebar"},"remove-toast":{"id":"remove-toast","title":"Remove toast programmatically","description":"An id is returned each time you display a toast, use it to remove a given toast programmatically by calling toast.dismiss(id)","sidebar":"someSidebar"},"render-what-you-want":{"id":"render-what-you-want","title":"Render anything","description":"You can render any valid ReactNode: string, number, component... This is really straightforward.","sidebar":"someSidebar"},"replace-default-transition":{"id":"replace-default-transition","title":"Replace the default transition","description":"There are 4 built-in transitions provided.","sidebar":"someSidebar"},"stacked":{"id":"stacked","title":"Stacked Notifications","description":"To enable it, add the stacked prop to the ToastContainer. I also suggest to disable the progress bar :).","sidebar":"someSidebar"},"timer":{"id":"timer","title":"Play or pause the timer programmatically","description":"By default, when you hover the notification or the window loses focus, the timer to dismiss the notification is paused. There are many more cases where you might want to pause the timer as well. For example, imagine you would like to toggle the notification timer based on the document visibility. It was not possible to do it before, but, with the new API, it\'s quite trivial.","sidebar":"someSidebar"},"update-toast":{"id":"update-toast","title":"Update a toast","description":"When you update a toast, the toast options and the content are inherited but don\'t worry you can update them as well.","sidebar":"someSidebar"},"use-a-controlled-progress-bar":{"id":"use-a-controlled-progress-bar","title":"Use a controlled progress bar","description":"Imagine you want to see the progress of a file upload. The example below features axios, but it works with anything!","sidebar":"someSidebar"},"use-a-custom-close-button-or-remove-it":{"id":"use-a-custom-close-button-or-remove-it","title":"Use a custom close button or remove it","description":"<iframe src=\\"https://codesandbox.io/embed/toastify-use-a-custom-close-button-or-remove-it-forked-fmc0ho?fontsize=14&hidenavigation=1&theme=dark\\"","sidebar":"someSidebar"},"use-a-custom-id":{"id":"use-a-custom-id","title":"Use a custom id","description":"A custom toastId can be used to replace the one generated. You can provide a number or a string.","sidebar":"someSidebar"},"use-react-toastify-with-redux":{"id":"use-react-toastify-with-redux","title":"Usage with redux","description":"\\"Talk is cheap. Show me the code.\\"","sidebar":"someSidebar"}}}')}}]);