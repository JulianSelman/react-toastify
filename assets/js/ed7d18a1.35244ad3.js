"use strict";(self.webpackChunkreact_toastify_doc=self.webpackChunkreact_toastify_doc||[]).push([[1812],{9216:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"icons","title":"Icons","description":"Built-in icons","source":"@site/docs/icons.mdx","sourceDirName":".","slug":"/icons","permalink":"/react-toastify/icons","draft":false,"unlisted":false,"editUrl":"https://github.com/fkhadra/react-toastify-doc/edit/master/docs/icons.mdx","tags":[],"version":"current","frontMatter":{"id":"icons","title":"Icons","sidebar_label":"Icons"},"sidebar":"someSidebar","previous":{"title":"Callbacks and closure reason \u2728","permalink":"/react-toastify/define-callback"},"next":{"title":"Replace the default transition","permalink":"/react-toastify/replace-default-transition"}}');var o=t(5105),i=t(9621),c=t(4637);const r={id:"icons",title:"Icons",sidebar_label:"Icons"},a=void 0,l={},d=[{value:"Built-in icons",id:"built-in-icons",level:2},{value:"Replace default icons",id:"replace-default-icons",level:2},{value:"Disable icons",id:"disable-icons",level:2},{value:"Custom icons",id:"custom-icons",level:2}];function u(e){const n={admonition:"admonition",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h2,{id:"built-in-icons",children:"Built-in icons"}),"\n",(0,o.jsxs)(n.p,{children:["Notifications of different types (",(0,o.jsx)(n.code,{children:"toast.info"}),", ",(0,o.jsx)(n.code,{children:"toast.error"}),", ",(0,o.jsx)(n.code,{children:"toast.success"}),", ",(0,o.jsx)(n.code,{children:"toast.warning"}),") display an icon associated with the selected type."]}),"\n",(0,o.jsx)("img",{width:"200",alt:"v8-icons-light",src:"https://user-images.githubusercontent.com/5574267/130860515-c9cf2b64-88b4-4711-971f-9149ec497152.png"}),"\n",(0,o.jsx)("img",{width:"200",alt:"v8-icons-dark",src:"https://user-images.githubusercontent.com/5574267/130860512-3a165ce6-7af3-4c24-8e81-f3f5a4561841.png"}),"\n",(0,o.jsx)("img",{width:"200",alt:"v8-icons-colored",src:"https://user-images.githubusercontent.com/5574267/130860506-750d2799-fb73-45cf-971a-7f4f3f8f48ce.png"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:'toast.info("Lorem ipsum dolor"); // same as toast(message, {type: "info"});\ntoast.error("Lorem ipsum dolor")\ntoast.success("Lorem ipsum dolor")\ntoast.success("Lorem ipsum dolor", {\n  theme: "colored"\n})\ntoast.warn("Lorem ipsum dolor")\ntoast.warn("Lorem ipsum dolor", {\n  theme: "dark"\n})\n'})}),"\n",(0,o.jsx)(n.h2,{id:"replace-default-icons",children:"Replace default icons"}),"\n",(0,o.jsxs)(n.p,{children:["You can provide a function to the ",(0,o.jsx)(n.code,{children:"icon"})," prop of the ",(0,o.jsx)(n.code,{children:"ToastContainer"})," to replace the built-in icons."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:"import { ToastContainer, toast } from 'react-toastify';\nimport { BadgeCheck, CircleAlert, Info, TriangleAlert } from 'lucide-react';\n\nexport default function App() {\n  const notify = () => {\n    toast.info('Wow so easy !');\n    toast.error('Wow so easy !');\n    toast.success('Wow so easy !');\n    toast.warning('Wow so easy !');\n  };\n\n  return (\n    <div className=\"grid place-items-center h-dvh bg-zinc-900/15\">\n      <Button onClick={notify}>Notify !</Button>\n      <ToastContainer\n        icon={({ type, theme }) => {\n          // theme is not used in this example but you could\n          switch (type) {\n            case 'info':\n              return <Info className=\"stroke-indigo-400\" />;\n            case 'error':\n              return <CircleAlert className=\"stroke-red-500\" />;\n            case 'success':\n              return <BadgeCheck className=\"stroke-green-500\" />;\n            case 'warning':\n              return <TriangleAlert className=\"stroke-yellow-500\" />;\n            default:\n              return null;\n          }\n        }}\n      />\n    </div>\n  );\n}\n"})}),"\n",(0,o.jsx)(c.C,{url:"https://stackblitz.com/edit/react-toastify-change-icons"}),"\n",(0,o.jsx)(n.h2,{id:"disable-icons",children:"Disable icons"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Disable the icon per toast"}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:'toast.error("Without icon", {\n  icon: false\n});\n'})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Disable the icon globally"}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:"<ToastContainer icon={false} />\n"})}),"\n",(0,o.jsx)(n.h2,{id:"custom-icons",children:"Custom icons"}),"\n",(0,o.jsx)(n.p,{children:"You can provide a custom icon of your choice. Any renderable element is valid."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:'// With a string\ntoast.success("You can provide any string", {\n  icon: "\ud83d\ude80"\n});\n\n// custom icons have access to the theme and the toast type\ntoast.success("And of course a component of your choice", {\n  icon: MyIcon\n});\n\ntoast.success("Even a function, given you return something that can be rendered", {\n  icon: ({theme, type}) =>  <img src="url"/>\n});\n'})}),"\n",(0,o.jsx)(n.admonition,{title:"Info",type:"info",children:(0,o.jsxs)(n.p,{children:["If you provide a component, the current ",(0,o.jsx)(n.code,{children:"theme"})," and ",(0,o.jsx)(n.code,{children:"type"})," are passed as props"]})})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(u,{...e})}):u(e)}},4637:(e,n,t)=>{t.d(n,{C:()=>o});var s=t(5105);function o(e){let{url:n}=e;return(0,s.jsx)("iframe",{src:n+"?embed=1&file=src%2FApp.tsx&hideExplorer=1&theme=dark&view=preview&hideNavigation=1",style:{width:"100%",height:"600px",border:0,borderRadius:"4px",overflow:"hidden"}})}},9621:(e,n,t)=>{t.d(n,{R:()=>c,x:()=>r});var s=t(8101);const o={},i=s.createContext(o);function c(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:c(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);